import os
env = Environment(ENV = os.environ)

env['CC']           = "arm-none-eabi-gcc"
env['CXX']          = "arm-none-eabi-c++"
env['AS']           = "arm-none-eabi-as"
env['AR']           = "arm-none-eabi-ar"
env['LD']           = "arm-none-eabi-ld"
env['NM']           = "arm-none-eabi-nm"
env['OBJDUMP']      = "arm-none-eabi-objdump"
env['OBJCOPY']      = "arm-none-eabi-objcopy"
env['SIZE']         = "arm-none-eabi-size"
env['RANLIB']       = 'arm-none-eabi-ranlib'
env['PROGSUFFIX']   = '.elf'

# include locations
env['CPPPATH'] = [
    '.',
    'mcu//cmsis//include'
    ]
# print env.Dump()
# # compiler flags
# env.Append(CCFLAGS = [
#     ])
 
# # linker flags
# env.Append(LINKFLAGS = [
#     ]) 
 
# defines
env['CPPDEFINES'] = [
    'NRF_MCU=NRF51822',
    # '__GNUC__'
]
 
# build everything
prg = env.Program(
    target = 'core',
    source = [
        'error/nrf_fault.c',
    ]
)

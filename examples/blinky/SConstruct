import os
import SCons.Defaults
import SCons.Tool
import SCons.Util

tools = ['gcc', 'g++', 'ar']

env = Environment(tools = tools, ENV = os.environ)
SCons.Tool.createProgBuilder(env)
print env

keil5_path = "C:\\keil_v5\\ARM\\ARMCC\\BIN\\"

env['CC']           = keil5_path + "Armcc.Exe"
env['CXX']          = keil5_path + "Armcc.Exe"
env['AS']           = keil5_path + "Armasm.Exe"
env['AR']           = keil5_path + "ArmAr.Exe"
env['LD']           = keil5_path + "ArmLink.Exe"
env['NM']           = ""
env['OBJDUMP']      = keil5_path + "FromElf.Exe"
env['OBJCOPY']      = 'arm-none-eabi-objcopy'
env['SIZE']         = 'arm-none-eabi-size'
env['RANLIB']       = 'arm-none-eabi-ranlib'
env['PROGSUFFIX']   = '.elf'

env['CCCOM']     = r'$CC -I C:\keil_v5\ARM\INC -I C:\keil_v5\ARM\INC\ARM $CFLAGS $CCFLAGS $CPPFLAGS $_CPPDEFFLAGS $_CPPINCFLAGS -c -o $TARGET $SOURCES'

env['ASFLAGS']   = SCons.Util.CLVar('')
env['ASPPFLAGS'] = '$ASFLAGS'
env['ASCOM']     = '$AS --cpu=Cortex-M0 $ASFLAGS -o $TARGET $SOURCES'
env['ASPPCOM']   = '$CC $ASPPFLAGS $CPPFLAGS $_CPPDEFFLAGS $_CPPINCFLAGS -c -o $TARGET $SOURCES ../../core/mcu/arm/arm_startup_nrf51.S'

env['LINK']        = keil5_path + "ArmLink.Exe"
env['LINKFLAGS']   = SCons.Util.CLVar('')
env['LINKCOM']     = r'$LINK --libpath C:\keil_v5\ARM\ARMCC\LIB $LINKFLAGS --cpu=Cortex-M0 -o $TARGET $SOURCES $LIBS'


env['PROGSUFFIX']  = '.afx'

# include locations
env['CPPPATH'] = [
    '.',
    '../../core/include/',
    '../../core/include/cmsis',
    '../../core/include/mcu'
    ]


env['CCFLAGS'] = ['-O2',
                  '--cpu=Cortex-M0']

env['LINKFLAGS'] = ['--cpu=Cortex-M0',
                    '--scatter=nrf52832_xxaa.sct']

# defines
env['CPPDEFINES'] = [
    'NRF_MCU=NRF52832'
]

prg = env.Program(
    target = 'core',
    source = [
        'main.c',
        '../../core/mcu/system_nrf51.c',
        '../../core/mcu/arm/arm_startup_nrf51.o'
    ]
)
